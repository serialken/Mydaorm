<?php

namespace Ams\SilogBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\DBAL\DBALException;

/**
 * SousCategorieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UtilisateurRepository extends EntityRepository
{
     public function getListeDepotById($id) {

        //Requête permettant la récupération des dépots liés à l'Id
        $qb = $this->createQueryBuilder('u')
                ->leftJoin('u.grpdepot', 'g')
                    ->addSelect('g')
                ->leftJoin('g.depots', 'd')
                    ->addSelect('d')
                ->where('u.id = :id')
                ->setParameter('id', $id);
        return $qb;
    }

    function getLogin($utilisateur_id) {
        $sql = "SELECT
                login
                FROM utilisateur
                WHERE id=".$utilisateur_id
                ;
        return $this->_em->getConnection()->fetchColumn($sql);
    }

    function selectCombo() {
        $sql = "SELECT
                id,
                concat_ws(' ',nom,prenom) as libelle
                FROM utilisateur
                ORDER BY concat_ws(' ',nom,prenom)"
                ;
        return $this->_em->getConnection()->fetchAll($sql);
    }
    
    
    /**
     * Recuperation des adresses de mail lors de l'envoi de l'alerte de suivi des generations des feuilles de portage
     * @return string
     * @throws \Doctrine\DBAL\DBALException
     */
    public function destinataires_mail_suivi_feuilles_portage() 
    {
        try {
            $sRetour    = '';
            $sSlct  = " SELECT
                            GROUP_CONCAT(DISTINCT email SEPARATOR ', ') AS email
                        FROM
                            utilisateur u
                            INNER JOIN profil p ON u.profil_id = p.id 
                        WHERE
                            p.code IN ('INFO_ADMIN', 'LOG_ADMIN')
                            AND u.actif = 1
                        ";
            $rSlct    = $this->_em->getConnection()->fetchAll($sSlct);
            foreach($rSlct as $aArr)
            {
                $sRetour = $aArr['email'];
            }
            return $sRetour;
        } catch (DBALException $ex) {
            throw $ex;
        }
    }

}
