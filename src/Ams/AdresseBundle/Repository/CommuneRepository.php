<?php

namespace Ams\AdresseBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * InseeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommuneRepository extends EntityRepository
{
    public function getCommuneDepot($id,$date_fin){
        $qb = $this->createQueryBuilder('commune')
                ->join('commune.depotCommunes','DC')
                ->addSelect('DC');
                $qb ->where('DC.dateFin > :today')
                 ->orWhere($qb->expr()->isNull('DC.dateFin'))
                 ->setParameter(":today", new \DateTime())
                 ->orderBy('commune.libelle','ASC')
                ;
        return $qb;
    }
        
    public function getInseeByZip($zip) {
    	$connection = $this->getEntityManager()->getConnection();
    	$q = "SELECT insee FROM commune  
    	WHERE cp = $zip";
    	$stmt = $connection->executeQuery($q);
    	return $stmt->fetch();
    }
    
    public function getInseeByLibelle($city) {
    	$connection = $this->getEntityManager()->getConnection();
    	$q = "SELECT insee FROM commune  
    	WHERE libelle = '$city'";
    	$stmt = $connection->executeQuery($q);
    	return $stmt->fetch();
    }
    
    
    public function getCommuneByDepotIds($depotIds) {

        $qb = $this->createQueryBuilder('commune')
                ->join('commune.depotCommunes','DC')
                ->where('DC.depot IN(:depotIds)')
                ->setParameter('depotIds', $depotIds)
                ->orderBy('commune.libelle', 'ASC');
        
        return $qb;
    }
    
    /**
     * Retourne la liste des dÃ©partements
     */
    public function listDpt(){        
        $connection = $this->getEntityManager()->getConnection();
    	$q = "SELECT DISTINCT LEFT(cp, 2) AS dpt FROM commune ORDER BY dpt";
    	$stmt = $connection->executeQuery($q);
        $aDpts = $stmt->fetchAll();
        $aReturn = array();
        foreach ($aDpts as &$aDpt){
            $aReturn[(int)$aDpt['dpt']] = (int)$aDpt['dpt'];
        }
    	return $aReturn;
    }
}
