<?php

namespace Ams\AdresseBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TourneeDetailRecoveryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TourneeDetailRecoveryRepository extends EntityRepository
{
    
    /*
     * Historisation des actions de "delete" sur la table tournee_detail
     * d'"upadate" via le trigger before_update_tournee_detail
     * $aConditions = array(
     *    array('fields' => 'num_abonne_id','value' => 12872,'operand' => '=')  ,
     *    array('fields' => 'jour_id','value' => 6,'operand' => '=')  ,
     *  );
     * $sourceCrud => string
     */
    public function insertBeforeDelete($aConditions,$sourceCrud) {  
        $sConditions = '';
        if(count($aConditions) > 0) {
            foreach($aConditions as $key=>$aCondition){
                if(!$key) $sConditions.= ' WHERE '.$aCondition['fields'].$aCondition['operand'].$aCondition['value'];
                else $sConditions.= ' AND '.$aCondition['fields'].$aCondition['operand'].$aCondition['value'];
            }
        }
        
        $q = 
            "
            INSERT INTO tournee_detail_recovery(abonne_soc_id,numabo_ext,modele_tournee_jour_code,flux_id,jour_id,insee,point_livraison_id,ordre,soc,titre,date_modification,source_modification,date_crud,source_crud)
            SELECT num_abonne_id,num_abonne_soc,modele_tournee_jour_code,flux_id,jour_id,insee,point_livraison_id,ordre,soc,titre,date_modification,
                   source_modification,NOW(),'$sourceCrud' 
            FROM tournee_detail
            $sConditions
            ";
        
        return $this->_em->getConnection()->prepare($q)->execute();
    }
}
